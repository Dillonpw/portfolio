---
import Layout from "../../layouts/Layout.astro";
import { descriptions } from "constants.ts";
import { Image } from "astro:assets";
import { Button } from "@/components/ui/button";
import { Github, ExternalLink } from "lucide-astro";

const { project } = Astro.props;
const { projectId } = Astro.params;


export async function getStaticPaths() {
  return descriptions.map((project) => ({
    params: { projectId: project.id },
    props: { project },
  }));
}

if (!project) {
  return new Response("Not Found", { status: 404, statusText: "Not Found" });
}
---

<Layout pageTitle={project.title}>
  <main>
    <div class="flex flex-col items-center justify-center px-4 pt-20 xl:px-20">
      <h1 class="text-2xl md:text-4xl pb-10 font-semibold">{project.title}</h1>
      {
        project.video && (
          <video
            src={project.video}
            class="items-center w-full max-w-[900px] justify-center rounded-lg border-2 border-black bg-slate-700 dark:border-white"
            muted
            autoplay
            loop
          />
        )
      }
      <Image
        class="w-full max-w-[900px] m-2 h-auto items-center justify-center rounded-lg border-2 border-black bg-slate-700 dark:border-white"
        src={project.src}
        alt={project.title}
        width={1400}
        height={400}
      />

      {
        project.src2 && (
          <Image
            class="w-full max-w-[900px] m-2 h-auto items-center justify-center rounded-lg border-2 border-black bg-slate-700 dark:border-white"
            src={project.src2}
            alt={project.title}
            width={1400}
            height={600}
          />
        )
      }
      {
        project.mobileImg && (
          <Image
            class="h-auto w-full max-w-[300px] items-center justify-center rounded-lg border-2 border-black bg-slate-700 dark:border-white"
            src={project.mobileImg}
            alt={project.title}
            width={600}
            height={800}
          />
        )
      }
    </div>

    <div class="mt-8 flex flex-wrap items-center justify-center">
      {
        project.tags.map((tag) => (
          <span class="m-2 px-10 cursor-default rounded-2xl border-2 bg-neutral-950 py-2 text-gray-200 dark:bg-gray-200 dark:text-neutral-950">
            {tag}
          </span>
        ))
      }
    </div>

    <div class="mt-4 flex gap-4 justify-center pb-6">
      <Button variant="outline">
        <a
          class="flex items-center gap-2"
          id={`github link ${projectId}`}
          href={project.githubLink}
          target="_blank"
          rel="noreferrer"
          aria-label="redirect to Github"
          ><Github /> <p>Github</p>
        </a>
      </Button>

      {
        project.livePreviewLink && (
          <Button variant="outline">
            <a
              class="flex items-center gap-2"
              id={`live preview link ${projectId}`}
              href={project.livePreviewLink}
              target="_blank"
              rel="noreferrer"
              aria-label="redirect to live preview"
            >
              <ExternalLink /> <p>Live Preview</p>
            </a>
          </Button>
        )
      }
    </div>

    <section class="ml-4 flex flex-col items-center justify-center">
      <div>
        <h3 class="mt-8 text-center text-2xl md:text-3xl">
          About This Project
        </h3>
        <p
          class="xs:px-8 text-left text-sm md:text-lg opacity-60 sm:px-12 md:px-40"
        >
          {project.about}
        </p>
      </div>
      <div>
        <h3 class="mt-8 text-center text-2xl md:text-3xl">Challenges</h3>
        <p
          class="xs:px-8 mb-10 text-left text-sm md:text-lg opacity-60 sm:px-12 md:px-40"
        >
          {project.challenge}
        </p>
      </div>
    </section>
  </main>
</Layout>
